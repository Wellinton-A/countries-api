import Head from 'next/head'
import Image from 'next/image'
import { useContext, useState } from 'react'

import { DarkModeContext } from '@/context/darkMode.context'

import GlobalStyle from '@/styles/GlobalStyle'

import searchIconLight from '../assets/icons8-search-black24.png'
import searchIconDarnk from '../assets/icons8-search-white24.png'
import arrowDownLight from '../assets/icons8-down-black24.png'
import arrowDownDark from '../assets/icons8-down-white24.png'

import * as S from '@/styles/style'
import Card from '@/components/Country-Card'

export const font = "'Nunito Sans', sans-serif"

export type Country = {
  name: {
    common: string
  }
  population: number
  region: string
  capital: string[]
  flags: {
    png: string
  }
}

type Props = {
  countries: Country[]
}

const Home = ({ countries }: Props) => {
  const [filter, setFilter] = useState<string>('')
  const [selectToggle, setSelectToggle] = useState<boolean>(false)

  const { darkMode } = useContext(DarkModeContext)

  return (
    <>
      <GlobalStyle darkmode={darkMode.toString()} font={font} />
      <Head>
        <title>Countries API</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link
          href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@200;300;600;800&display=swap"
          rel="stylesheet"
        />
      </Head>
      <main>
        <div className="container">
          <S.FiltersContainerPrincipal>
            <S.SearchContainer darkmode={darkMode.toString()}>
              {darkMode ? (
                <Image
                  src={searchIconDarnk}
                  alt="Search Icon"
                  width={18}
                  height={18}
                />
              ) : (
                <Image
                  src={searchIconLight}
                  alt="Search Icon"
                  width={18}
                  height={18}
                />
              )}
              <input type="text" placeholder="Search for a countryâ€¦" />
            </S.SearchContainer>
            <S.FilterByRegionContainer>
              <S.SelectContainer darkmode={darkMode.toString()}>
                <span>Filter by Region</span>
                <S.ArrowDownImageContainer
                  onClick={() => setSelectToggle(!selectToggle)}
                >
                  {darkMode ? (
                    <Image
                      src={arrowDownDark}
                      alt="arrow down Icon"
                      width={9}
                      height={6}
                    />
                  ) : (
                    <Image
                      src={arrowDownLight}
                      alt="arrow down Icon"
                      width={9}
                      height={6}
                    />
                  )}
                </S.ArrowDownImageContainer>
              </S.SelectContainer>
              <S.OptionsDiv
                selecttoggle={selectToggle.toString()}
                darkmode={darkMode.toString()}
              >
                <span>Africa</span>
                <span>America</span>
                <span>Asia</span>
                <span>Europe</span>
                <span>Oceania</span>
              </S.OptionsDiv>
            </S.FilterByRegionContainer>
          </S.FiltersContainerPrincipal>
          <S.AllCardContainer>
            {countries.map((country: Country) => (
              <Card key={country.name.common} country={country} />
            ))}
          </S.AllCardContainer>
        </div>
      </main>
    </>
  )
}

export default Home

export const getStaticProps = async () => {
  const result = await fetch('https://restcountries.com/v3.1/all')
  const data = await result.json()

  return {
    props: {
      countries: data
    }
  }
}
